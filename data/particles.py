# -*- coding: utf-8 -*- # Языковая кодировка UTF-8
import re

particles_set = {
    "б", "будто", "буквально", "бы", "ведь", "вообще-то", "вот", "вроде",
    "вряд ли", "всё-таки", "все-таки", "всего-навсего", "даже", "довольно",
    "допустим", "едва ли", "едва ли не", "ещё", "еще", "ещё бы", "еще бы",
    "ж", "же", "именно", "исключительно", "как бы", "конечно", " ли", "лишь",
    "не", "нет", "неужели", "ни", "пожалуй", "пожалуйста", "правда,",
    "просто", "просто-напросто", "прямо", "прямо-таки", "разве", "разумеется",
    "решительно", "скорее", "словно", "собственно", "спасибо", "так", "таки",
    "типа", "тоже", "только", "точнее", "угодно", "уж", "уже", "хоть",
    'вот так', 'вот уже', 'вот что', 'вроде бы', 'всё же', 'хотя бы'
    'вроде как', 'все же', 'все равно', 'все равно что', 'всего лишь',
    'достаточно', 'едва ли не', 'едва не', 'единственно', 'еще как',
    'и без того', 'и впрямь', 'как раз', 'лишь только', 'мало ли', 'не иначе',
    'не иначе как', 'не кто иной как', 'не просто', 'не так ли',
    'не то чтобы', 'не только', 'не только что', 'не что иное, как',
    'не что иное как', 'опять же', 'опять-таки', 'отнюдь', 'по крайней мере',
    'попросту', 'почти', 'почти что', 'разве только', 'разве что', 'ровно бы',
    'само собой', 'так и есть', 'так или иначе', 'так ли', 'также',
    'тем более', 'только и всего', 'только лишь', 'чуть не', 'чисто',
    'чуть было не', 'всего-то', 'практически', 'фактически', 'действительно'}

particles_list = list(particles_set)

# Сортируем единицы по длине от большего к меньшему
particles_list.sort(key=len, reverse=True)

# Создаем регулярное выражение
pattern = re.compile(r'\b(?:' + '|'.join(map(re.escape, particles_list)) + r')\b')

text = """"
Развитие информационных технологий,'всего-то', 'практически', 'фактически', их активное проникновение в общественные процессы, 
"""

if __name__ == "__main__":
    lowercase_text = text.lower()

    found_particles = [m.group() for m in pattern.finditer(lowercase_text)]

    print(found_particles)
    print(len(found_particles))
